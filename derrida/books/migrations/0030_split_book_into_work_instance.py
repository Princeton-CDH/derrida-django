# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-05-25 18:23
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import sortedm2m.fields


class Migration(migrations.Migration):

    dependencies = [
        ('places', '0001_initial'),
        ('people', '0002_allow_neg_years_bc'),
        ('books', '0029_add_anchor_text_reference'),
    ]

    operations = [
        migrations.CreateModel(
            name='Instance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True)),
                ('alternate_title', models.CharField(blank=True, max_length=255)),
                ('zotero_id', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator('\\W', inverse_match=True, message='Zotero IDs must be alphanumeric.')])),
                ('is_extant', models.BooleanField(default=False, help_text='Extant in PUL JD')),
                ('is_annotated', models.BooleanField(default=False)),
                ('is_translation', models.BooleanField(default=False)),
                ('dimensions', models.CharField(blank=True, max_length=255)),
                ('copyright_year', models.PositiveIntegerField(blank=True, null=True)),
                ('print_date', models.DateField(blank=True, help_text='Date in YYYY-MM-DD format. If either pub_month or pub_day_missing are checked 01 for MM or DD indicates that the information is not known.', null=True, verbose_name='Print Date')),
                ('print_date_day_known', models.BooleanField(default=False)),
                ('print_date_month_known', models.BooleanField(default=False)),
                ('print_date_year_known', models.BooleanField(default=True)),
                ('uri', models.URLField(blank=True, default='', help_text='Finding Aid URL for items in PUL Derrida Library', verbose_name='URI')),
                ('has_dedication', models.BooleanField(default=False)),
                ('has_insertions', models.BooleanField(default=False)),
                ('start_page', models.CharField(blank=True, max_length=20, null=True)),
                ('end_page', models.CharField(blank=True, max_length=20, null=True)),
                ('cited_in', models.ManyToManyField(help_text='Derrida works that cite this edition or instance', to='books.DerridaWork')),
                ('collected_in', models.ForeignKey(blank=True, help_text='Larger work instance that collects or includes this item', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='collected_set', to='books.Instance')),
                ('journal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='books.Journal')),
            ],
            options={
                'ordering': ['alternate_title', 'work__primary_title'],
                'verbose_name': 'Derrida library work instance',
            },
        ),
        migrations.CreateModel(
            name='InstanceCatalogue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True)),
                ('start_year', models.SmallIntegerField(blank=True, null=True)),
                ('end_year', models.SmallIntegerField(blank=True, null=True)),
                ('is_current', models.BooleanField()),
                ('call_number', models.CharField(blank=True, help_text='Used for Derrida shelf mark', max_length=255, null=True)),
                ('instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='books.Instance')),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='books.OwningInstitution')),
            ],
            options={
                'verbose_name': 'Catalogue',
            },
        ),
        migrations.CreateModel(
            name='InstanceCreator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True)),
                ('creator_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='books.CreatorType')),
                ('instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='books.Instance')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='people.Person')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InstanceLanguage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True)),
                ('is_primary', models.BooleanField()),
                ('instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='books.Instance')),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='books.Language')),
            ],
            options={
                'verbose_name': 'Language',
            },
        ),
        migrations.CreateModel(
            name='Work',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True)),
                ('primary_title', models.TextField()),
                ('short_title', models.CharField(max_length=255)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('uri', models.URLField(blank=True, default='', help_text='Linked data URI', verbose_name='URI')),
                ('authors', models.ManyToManyField(to='people.Person')),
            ],
            options={
                'ordering': ['primary_title'],
                'verbose_name': 'Derrida library work',
            },
        ),
        migrations.CreateModel(
            name='WorkLanguage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True)),
                ('is_primary', models.BooleanField()),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='books.Language')),
                ('work', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='books.Work')),
            ],
            options={
                'verbose_name': 'Language',
            },
        ),
        migrations.CreateModel(
            name='WorkSubject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True)),
                ('is_primary', models.BooleanField()),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='books.Subject')),
                ('work', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='books.Work')),
            ],
            options={
                'verbose_name': 'Subject',
            },
        ),
        migrations.AlterModelOptions(
            name='associatedbook',
            options={'verbose_name': 'Associated Book'},
        ),
        migrations.AlterModelOptions(
            name='book',
            options={'ordering': ['primary_title'], 'verbose_name': 'Derrida library work (OLD)', 'verbose_name_plural': 'Derrida library works (OLD)'},
        ),
        migrations.AlterField(
            model_name='reference',
            name='book_page',
            field=models.CharField(blank=True, default='', max_length=255),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='work',
            name='languages',
            field=models.ManyToManyField(through='books.WorkLanguage', to='books.Language'),
        ),
        migrations.AddField(
            model_name='work',
            name='subjects',
            field=models.ManyToManyField(through='books.WorkSubject', to='books.Subject'),
        ),
        migrations.AddField(
            model_name='instance',
            name='languages',
            field=models.ManyToManyField(through='books.InstanceLanguage', to='books.Language'),
        ),
        migrations.AddField(
            model_name='instance',
            name='owning_institutions',
            field=models.ManyToManyField(through='books.InstanceCatalogue', to='books.OwningInstitution'),
        ),
        migrations.AddField(
            model_name='instance',
            name='pub_place',
            field=sortedm2m.fields.SortedManyToManyField(blank=True, help_text=None, to='places.Place', verbose_name='Place(s) of Publication'),
        ),
        migrations.AddField(
            model_name='instance',
            name='publisher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='books.Publisher'),
        ),
        migrations.AddField(
            model_name='instance',
            name='work',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='books.Work'),
        ),
        migrations.AddField(
            model_name='reference',
            name='instance',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='books.Instance'),
        ),
        migrations.AlterUniqueTogether(
            name='worksubject',
            unique_together=set([('subject', 'work')]),
        ),
        migrations.AlterUniqueTogether(
            name='worklanguage',
            unique_together=set([('work', 'language')]),
        ),
        migrations.AlterUniqueTogether(
            name='instancelanguage',
            unique_together=set([('instance', 'language')]),
        ),
    ]
