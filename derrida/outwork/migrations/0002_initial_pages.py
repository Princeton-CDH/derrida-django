# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-10-17 20:12
from __future__ import unicode_literals

from collections import OrderedDict

from attrdict import AttrDict
from django.conf import settings
from django.db import migrations
from django.utils import timezone
from mezzanine.core.models import CONTENT_STATUS_PUBLISHED


#: primary nav (also in footer)
NAV_PAGES = OrderedDict([
    ('library', {'title': 'Derrida\'s Library'}),
    ('references', {'title': 'Reference List'}),
    ('references/histogram/de-la-grammatologie', {'title': 'Visualization'}),
    ('outwork', {'title': 'Outwork'})
])

#: footer nav
FOOTER_PAGES = OrderedDict([
    ('/', {'title': 'Home'}),
    ('cite', {'title': 'How to Cite'}),
    ('contact', {'title': 'Contact'}),
])


def create_pages(apps, schema_editor):
    RichTextPage = apps.get_model('pages', 'RichTextPage')
    site_id = settings.SITE_ID
    now = timezone.now()

    index = 1
    for slug, info in FOOTER_PAGES.items():
        info = AttrDict(info)
        # todo: bulk create?
        RichTextPage.objects.create(slug=slug, title=info.title,
            titles=info.title, created=now, updated=now,
            status=CONTENT_STATUS_PUBLISHED, content='',
            site_id=site_id, publish_date=now, in_menus="3",
            content_model="richtextpage", _order=index)
        index += 1

    for slug, info in NAV_PAGES.items():
        info = AttrDict(info)
        # todo: bulk create?
        RichTextPage.objects.create(slug=slug, title=info.title,
            titles=info.title, created=now, updated=now,
            status=CONTENT_STATUS_PUBLISHED, content='',
            site_id=site_id, publish_date=now, in_menus="1,3",
            content_model="richtextpage", _order=index)
        index += 1


def remove_pages(apps, schema_editor):
    RichTextPage = apps.get_model('pages', 'RichTextPage')

    RichTextPage.objects.filter(slug__in=FOOTER_PAGES.keys()).delete()
    RichTextPage.objects.filter(slug__in=NAV_PAGES.keys()).delete()


class Migration(migrations.Migration):

    dependencies = [
        ('outwork', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(create_pages, reverse_code=remove_pages),
    ]
