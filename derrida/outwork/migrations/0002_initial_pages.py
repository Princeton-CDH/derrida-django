# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-10-17 20:12
from __future__ import unicode_literals

from collections import OrderedDict

from attrdict import AttrDict
from django.conf import settings
from django.db import migrations
from django.utils import timezone
from mezzanine.core.models import CONTENT_STATUS_PUBLISHED


initial_homepage_content = '''
<section>
    <q>And yet did we not know that... only in the book, coming back to it unceasingly, drawing all our resources from it, could we indefinitely designate the writing beyond the book?</q>
    <p class="quote-cite">Jacques Derrida, <i>Writing and Difference</i></p>
    <p>“Derrida’s Margins” unpacks the library contained within each of Derrida’s published works, starting with the landmark 1967 text <i>De la grammatologie</i>. Additional texts will be added as the project continues.</p>
    <p>This scholarly tool enables researchers to approach the development of deconstruction in an unprecedented way by exploring the relationship between Derrida’s thought and his reading practices.  Users may browse or search: Derrida’s personal copies of books that are referenced in <i>De la grammatologie</i>; the nearly one thousand <strong>references</strong> (quotations, citations, footnotes, or epigraphs) found in the pages of <i>De la grammatologie</i>; and the <strong>interventions</strong> Derrida made in his books (annotations, marginalia, bookmarks, tipped-in pages, notes, etc.) that correspond to each reference. The website also provides data <strong>visualizations</strong> of Derrida’s references.
    <p>The Library of Jacques Derrida is housed in Princeton University Library’s Rare Books and Special Collections.</p>
</section>
<section class="credits">
    <ul class="credits__group">
    <li class="credits__role">Project Director</li>
    <li class="credits__name">Katie Chenoweth</li>
    </ul>
    <ul class="credits__group">
    <li class="credits__role">Project Manager</li>
    <li class="credits__name">Alex Raiffe</li>
    </ul>
    <ul class="credits__group">
    <li class="credits__role">Technical Lead</li>
    <li class="credits__name">Rebecca Sutton Koeser</li>
    </ul>
    <ul class="credits__group">
    <li class="credits__role">Project Designer</li>
    <li class="credits__name">Rebecca Munson</li>
    </ul>
    <ul class="credits__group">
    <li class="credits__role">User Experience Designer</li>
    <li class="credits__name">Xinyi Li</li>
    </ul>
    <ul class="credits__group">
    <li class="credits__role">Web Developers</li>
    <li class="credits__name">Benjamin Hicks</li>
    <li class="credits__name">Kevin Glover</li>
    <li class="credits__name">Nick Budak</li>
    </ul>
    <ul class="credits__group">
    <li class="credits__role">Database Designer</li>
    <li class="credits__name">Jean Bauer</li>
    </ul>
    <ul class="credits__group">
    <li class="credits__role">Graduate Research Assistants</li>
    <li class="credits__name">Ren&eacute;e Altergott</li>
    <li class="credits__name">Chad C&oacute;rdova</li>
    <li class="credits__name">Austin Hancock</li>
    <li class="credits__name">Chlo&eacute; Vettier</li>
    </ul>
    <ul class="credits__group">
    <li class="credits__role">Undergraduate Research Assistants</li>
    <li class="credits__name">Jin Chow</li>
    <li class="credits__name">Elise Freeman</li>
    </ul>
    <ul class="credits__group">
    <li class="credits__role">Advisors</li>
    <li class="credits__name">Avital Ronell</li>
    <li class="credits__name">Eduardo Cadava</li>
    <li class="credits__name">Geoffrey Bennington</li>
    </ul>
</section>
'''

#: primary nav (also in footer)
NAV_PAGES = OrderedDict([
     ('library', {'title': 'Derrida\'s Library',
         'description': 'Browse Derrida’s personal copies of the books referenced in his published works.'}),
     ('references', {'title': 'Reference List',
         'description': 'Explore the quotations and references in Derrida’s works.'}),
    ('interventions', {'title': 'Interventions',
        'description': 'Explore the traces of Derrida’s reading.'}),
    ('references/histogram/de-la-grammatologie', {'title': 'Visualization',
        'description': 'Explore all quotations and references in Derrida’s works.',
        'meta_title': 'References by Section ‖ Visualization'}),
])

#: footer nav
FOOTER_PAGES = OrderedDict([
    ('/', {'title': 'Derrida\'s Margins',
        'description': 'An online research tool for Derrida’s annotations that provides a behind-the-scenes look at his reading practices and the philosophy of deconstruction',
        'content': initial_homepage_content}),
    ('outwork', {'title': 'Outwork'}),
    ('cite', {'title': 'How to Cite'}),
    ('contact', {'title': 'Contact'}),
])

OTHER_PAGES = OrderedDict([
    ('references/histogram', {'title': 'Visualization by Author',
        'description': 'Explore all quotations and references in Derrida’s works.',
        'meta_title': 'References by Author ‖ Visualization'})
])


def create_pages(apps, schema_editor):
    RichTextPage = apps.get_model('pages', 'RichTextPage')
    Site = apps.get_model('sites', 'Site')
    site = Site.objects.get_or_create(pk=settings.SITE_ID)[0]
    now = timezone.now()

    def create_page(slug, info, index, menus=''):
        RichTextPage.objects.create(slug=slug, title=info.title,
            _meta_title=info.get('meta_title', ''),
            titles=info.title, created=now, updated=now,
            description=info.get('description', ''),
            gen_description=not info.get('description', ''),
            status=CONTENT_STATUS_PUBLISHED,
            content=info.get('content', '[placeholder]'),
            site=site, publish_date=now, in_menus=menus,
            content_model="richtextpage", _order=index)

    index = 1
    for slug, info in FOOTER_PAGES.items():
        create_page(slug, AttrDict(info), index, menus="3")
        index += 1

    for slug, info in NAV_PAGES.items():
        create_page(slug, AttrDict(info), index, menus="1,3")
        index += 1

    for slug, info in OTHER_PAGES.items():
        create_page(slug, AttrDict(info), index)
        index += 1


def remove_pages(apps, schema_editor):
    RichTextPage = apps.get_model('pages', 'RichTextPage')

    slugs = list(FOOTER_PAGES.keys()) + list(NAV_PAGES.keys()) \
        + list(OTHER_PAGES.keys())
    RichTextPage.objects.filter(slug__in=slugs).delete()


class Migration(migrations.Migration):

    dependencies = [
        ('sites', '0002_alter_domain_unique'),
        ('outwork', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(create_pages, reverse_code=remove_pages),
    ]
