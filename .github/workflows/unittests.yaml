name: unit tests

on:
  push: # run on every push or PR to any branch
  # pull_request:

env:
  SOLR_CORE: derrida

jobs:
  python-unit:
    name: python unit tests
    runs-on: ubuntu-latest

    services:
      db:
        image: mariadb
        env:
          MYSQL_DATABASE: derrida
          MYSQL_ROOT_PASSWORD: derrida
        ports:
          - 3306:3306
      solr:
        image: solr:6.6
        ports:
          - 8983:8983
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          # This version is necessary for CI to run, despite the site being on python 3.5
          python-version: 3.6
      - uses: actions/setup-node@v2
        with:
          # This version is necessary for CI to run, despite the site being on node 8.16
          node-version: 10.16.3

      # Perform installations
      - run: pip install -r ci/ci-requirements.lock
      # - run: npm install -g yarn
      # - run: yarn install
      # - run: yarn add postcss-cli postcss node-sass
      # - run: npm ci
      # HACK: Use different sass
      # - run: npm uninstall postcss-cli postcss node-sass
      # - run: npm install postcss-cli
      # - run: npm install postcss
      # - run: npm install -f node-sass
      - run: pip install codecov
      - run: sudo apt-get install ruby-sass

      # Setup local settings
      - name: Copy test settings to local settings
        run: cp ci/testsettings.py derrida/local_settings.py
      - name: Generate secret key and add to local settings
        run: python -c "import uuid; print('SECRET_KEY = \'%s\'' % uuid.uuid4())" >> derrida/local_settings.py

      # configure solr core
      - name: Create solr core with basic configs
        run: docker exec ${{ job.services.solr.id }} /bin/bash -c "/opt/solr/bin/solr create -c $SOLR_CORE -n basic_config"
      - name: Copy solr core config to local vm
        run: docker cp ${{ job.services.solr.id }}:/opt/solr/server/solr/derrida/conf /tmp/derrida-conf
      - name: Customize solr schema with haystack
        run: python manage.py build_solr_schema --configure-directory=/tmp/derrida-conf
      - name: Remove uncustomized solr conf
        run: docker exec ${{ job.services.solr.id }} /bin/bash -c "rm -rf /opt/solr/server/solr/derrida/conf"
        # copy in to solr configset directory
      - name: Copy updated solr config back to solr
        run: docker cp /tmp/derrida-conf ${{ job.services.solr.id }}:/opt/solr/server/solr/derrida/conf
      - name: Reload the solr core
        run: python manage.py build_solr_schema --configure-directory=/tmp/derrida-conf  --reload-core $SOLR_CORE

      # skip runserver site for pa11y
      # - run: python manage.py migrate
      # - run: python manage.py loaddata sample_work_data test_references
      # - run: python manage.py rebuild_index --noinput # index in solr
      # - run: python manage.py runserver --insecure & # run for pa11y, serve static content

      # Perform test
      # - run: python -m pytest
      - run: pytest --cov=derrida
